{
    "id": "roo-file-170",
    "name": "Pman.Tab.BuilderView",
    "parent": "Pman.Tab.BuilderTab",
    "title": "Pman.Tab.BuilderView",
    "path": "/home/alan/gitlive/Pman.Builder/Pman.Tab.BuilderView.bjs",
    "items": [
        {
            "listeners": {
                "activate": "function (_self)\n{\n    _this.panel = _self;\n}"
            },
            "region": "center",
            "title": "View",
            "xtype": "NestedLayoutPanel",
            "|clearAll": "function(isAuto) {\n\n    Pman.Builder.View.clearAll(isAuto);\n}\n",
            "|munge": "function(cfg, keyname) {\n     return Pman.Builder.View.munge(cfg,keyname);\n        \n        \n}\n",
            "|redraw": "function(isAuto)\n    {\n        \n        // top level is not relivant\n\n//          var btop =  Pman.Tab.BuilderTop2;\n  //      if (isAuto && btop.redrawBtn  && !btop.redrawBtn.auto) {\n    //        return; /// auto redraw is turned off..\n      //  }\n        \n        this.clearAll(isAuto);\n        \n        var cfg =  this.toJS();\n        if (!cfg.items[0]) {\n            return;\n        }\n        \n        \n        this.munge(cfg.items[0]);\n        \n        // we draw either a dialog or a tab..\n        \n        if (cfg.items[0].xtype == 'LayoutDialog') {\n            \n            cfg.items[0].modal = false;\n            var xy  = this.el.getXY();\n            cfg.items[0].x = xy[0];\n            cfg.items[0].y = xy[1];\n            cfg.items[0].constraintoviewport = false;\n            \n            this.dialogroot = Roo.get( document.body).createChild();\n            try { \n                this.dialog = new Roo[cfg.items[0].xtype](this.dialogroot, cfg.items[0]);\n              //  this.dialog.el.on('click', this.panelClick, this);\n                this.dialog.show();\n                var dlg = this.dialog;\n                (function () {\n                    dlg.moveTo(xy[0], xy[1]);\n                }).defer(100);\n            } catch(e) {\n                Roo.log(\"Error rendering: \" + e.toString());\n                Roo.log(e);\n            }\n            return;\n            \n            \n        }\n        // should we render this into a dialog???\n             // force center region..\n        cfg.items[0].region = 'center';\n        cfg.items[0].background = false;\n        \n        try {\n            this.panelroot = this.layout.addxtype(cfg.items[0]);\n        \n        } catch(e) {\n            Roo.log(\"Error rendering: \" + e.toString());\n            Roo.log(e);\n        }\n        //this.highlightElement(Pman.Tab.BuilderTree.currentNode);\n        \n        if (this.panelroot && this.panelroot.el) {\n                this.panelroot.el.scrollTo('top', 0);\n                this.panelroot.el.scrollTo('left', 0);\n            \n        }\n    }",
            "|toJS": "function(n) {\n \n    if (!n) {\n        return Pman.Builder.Tree.toJS(Pman.Tab.BuilderTree.tree.root);\n    }\n\n    var _this = this;\n    var ret = Pman.Builder.Tree.cloneConfig(n.elConfig);\n    \n    // flag to prevent rendering..\n    if ((typeof(ret['+buildershow']) != 'undefined') && !ret['+buildershow']) {\n        return false;\n    }\n\n    ret.id = typeof(ret.id) == 'undefined' ? 'builder-' + n.id : ret.id;\n\n    if (n.childNodes.length) {\n        ret.items = [];\n        n.eachChild(function(cn) {\n            var add = _this.toJS(cn);\n            if (add === false) {\n                return;\n            }\n            \n            \n            ret.items.push(add);\n        });\n            \n    }\n    return ret;\n}\n",
            "|xns": "Roo",
            "items": [
                {
                    "|xns": "Roo",
                    "xtype": "BorderLayout",
                    "*prop": "layout",
                    "items": [
                        {
                            "*prop": "center",
                            "alwaysShowTabs": true,
                            "tabPosition": "top",
                            "xtype": "LayoutRegion",
                            "|xns": "Roo"
                        }
                    ]
                }
            ]
        }
    ],
    "permname": "",
    "modOrder": "001"
}